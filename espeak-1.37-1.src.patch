diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4~' -x aclocal.m4t -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x '*config.h.in' -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x libtool.m4 -x ltoptions.m4 -x ltsugar.m4 -x ltversion.m4 -x 'lt~obsolete.m4' -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in origsrc/espeak-1.37-source/src/Makefile src/espeak-1.37-source/src/Makefile
--- origsrc/espeak-1.37-source/src/Makefile	2008-04-16 07:06:34.000000000 -0500
+++ src/espeak-1.37-source/src/Makefile	2008-05-29 23:39:22.593750000 -0500
@@ -11,11 +11,12 @@
 BIN2_NAME = espeak
 LIB_NAME = libespeak.so
 STATIC_LIB_NAME = libespeak.a
+IMPORT_LIB_NAME = libespeak.dll.a
 LIB_VERSION = 1
 LIBTAG = $(LIB_VERSION).$(RELEASE)
 
 # Use SONAME_OPT=-Wl,h, on Solaris
-SONAME_OPT=-Wl,-soname,
+SONAME_OPT=-Wl,-soname,$(LIB_NAME).$(LIB_VERSION)
 
 # Use EXTRA_LIBS=-lm on Solaris
 EXTRA_LIBS =
@@ -74,7 +75,9 @@
 
 
 all: $(BIN_NAME) $(LIB_NAME) $(STATIC_LIB_NAME) $(BIN2_NAME)
+ifneq ($(OS), Windows_NT)
 	mv $(LIB_NAME) $(LIB_NAME).$(LIBTAG)
+endif
 
 .cpp.o:
 	$(CXX) $(CXXFLAGS) $(USE_AUDIO) -D PATH_ESPEAK_DATA=\"$(DATADIR)\" -Wall -pedantic -I. -c -fno-exceptions  $<
@@ -92,7 +95,7 @@
 	-I. -D LIBRARY -c -fno-exceptions  $<  -o x_$*.o
 
 $(LIB_NAME): $(OBJS2)
-	$(CXX) -shared $(SONAME_OPT)$(LIB_NAME).$(LIB_VERSION) -o $@ $(OBJS2) $(LIBS2)
+	$(CXX) -shared $(SONAME_OPT) -o $@ $(OBJS2) $(LIBS2)
 
 $(STATIC_LIB_NAME): $(OBJS2)
 	$(AR) cqs $(STATIC_LIB_NAME) $(OBJS2)
@@ -115,13 +118,18 @@
 	# Install espeak executable
 	$(INSTALL) -m 755 $(BIN2_NAME) $(DESTDIR)$(BINDIR)
 	# Install shared library
+ifeq ($(OS), Windows_NT)
+	$(INSTALL) -m 755 $(LIB_NAME) $(DESTDIR)$(BINDIR)
+	$(INSTALL) -m 755 $(IMPORT_LIB_NAME) $(DESTDIR)$(LIBDIR)
+else
 	$(INSTALL) -m 755 $(LIB_NAME).$(LIBTAG) $(DESTDIR)$(LIBDIR)
-	# Install static library
-	$(INSTALL) -m 755 $(STATIC_LIB_NAME) $(DESTDIR)$(LIBDIR)
 	$(LN_SF) $(LIB_NAME).$(LIBTAG) $(DESTDIR)$(LIBDIR)/$(LIB_NAME).$(LIB_VERSION)
 	$(LN_SF) $(LIB_NAME).$(LIB_VERSION) $(DESTDIR)$(LIBDIR)/$(LIB_NAME)
+endif
+	# Install static library
+	$(INSTALL) -m 755 $(STATIC_LIB_NAME) $(DESTDIR)$(LIBDIR)
 	# Install development headers
 	$(INSTALL) -pm 644 speak_lib.h $(DESTDIR)$(INCDIR)
 	# Install data files
-	cp -prf ../espeak-data/* $(DESTDIR)$(DATADIR)
+	cp -Lprf ../espeak-data/* $(DESTDIR)$(DATADIR)
 
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4~' -x aclocal.m4t -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x '*config.h.in' -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x libtool.m4 -x ltoptions.m4 -x ltsugar.m4 -x ltversion.m4 -x 'lt~obsolete.m4' -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in origsrc/espeak-1.37-source/src/readclause.cpp src/espeak-1.37-source/src/readclause.cpp
--- origsrc/espeak-1.37-source/src/readclause.cpp	2008-04-16 07:03:05.000000000 -0500
+++ src/espeak-1.37-source/src/readclause.cpp	2008-05-29 23:28:53.609375000 -0500
@@ -265,6 +265,7 @@
 	return(0);
 }
 
+#ifndef __CYGWIN__
 const wchar_t *wcschr(const wchar_t *str, int c)
 {
    while(*str != 0)
@@ -286,6 +287,7 @@
 	}
 	return(ix);
 }
+#endif // __CYGWIN__
 
 float wcstod(const wchar_t *str, wchar_t **tailptr)
 {
